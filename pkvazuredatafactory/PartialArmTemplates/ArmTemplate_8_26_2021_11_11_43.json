{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pkvazuredatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RatingLakeCsvDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lspkvdeloittestorageacc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ratings",
						"fileSystem": "movielens"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "userId",
						"type": "String"
					},
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "timestamp",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieRatingToParquet')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MovieLakeDS",
								"type": "DatasetReference"
							},
							"name": "MoviesCSV"
						},
						{
							"dataset": {
								"referenceName": "RatingLakeCsvDS",
								"type": "DatasetReference"
							},
							"name": "RatingCSV"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lspkvdeloittestorageacc",
								"type": "LinkedServiceReference"
							},
							"name": "MovieToParquet"
						},
						{
							"linkedService": {
								"referenceName": "lspkvdeloittestorageacc",
								"type": "LinkedServiceReference"
							},
							"name": "RatingToPrquet"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\tmovieId as string,\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['movies'],\n\tpartitionBy('roundRobin', 4)) ~> MoviesCSV\nsource(output(\n\t\tuserId as string,\n\t\tmovieId as string,\n\t\trating as string,\n\t\ttimestamp as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['ratings'],\n\tpartitionBy('hash', 20,\n\t\tmovieId\n\t)) ~> RatingCSV\nMoviesCSV select(mapColumn(\n\t\tmovieId,\n\t\ttitle,\n\t\tgenres\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nRatingCSV select(mapColumn(\n\t\tuserId,\n\t\tmovieId,\n\t\trating,\n\t\ttimestamp\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'analytics',\n\tfolderPath: 'movies',\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MovieToParquet\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'analytics',\n\tfolderPath: 'ratings',\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RatingToPrquet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RatingLakeCsvDS')]"
			]
		}
	]
}